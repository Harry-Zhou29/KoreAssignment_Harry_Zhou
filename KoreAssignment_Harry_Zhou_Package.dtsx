<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/29/2024 12:17:19 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="CATHY"
  DTS:CreatorName="CATHY\cathy"
  DTS:DTSID="{1858C18B-6D2D-4B35-BF87-8B0C956C7034}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5467.0"
  DTS:LocaleID="4105"
  DTS:MaxErrorCount="5"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="93"
  DTS:VersionGUID="{9EBF0E4D-0851-4542-B7F1-9111F915E86B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B32ABB5D-34B0-4AA3-A819-CB4AC45804C2}"
      DTS:ObjectName="LocalHost.KoreAssignment_Harry_Zhou.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;User ID=sa;Initial Catalog=KoreAssignment_Harry_Zhou;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{B32ABB5D-34B0-4AA3-A819-CB4AC45804C2}LocalHost.KoreAssignment_Harry_Zhou.sa;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA6MCzCs6jpUmmmm72TLQBngAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAACGBSOO6o7OkAlT8AcSWdg1rNkL9knHVjb6jDoXTVgO6wAAAAAOgAAAAAIAACAAAADRAF4NHrh1mThTBI+Ls0e0oNorZUDYWEXiptfZHmLJriAAAACOPN2pZ4yCtg7ZFS+h/O0T7v/2j/B5Bn4ugQCuigc5J0AAAAAZtX6sporjp/Ma2iqk2ttgbqKvnpKE9swC7qorV0jM75jIC9crRuMX4JDhJRBbrP/ylktbfEuepkJuyRJk6btW</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source CSV File Connection]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Connect to CSV File"
      DTS:DTSID="{E6B35A1B-01FE-4508-AEB3-84A716329B3D}"
      DTS:ObjectName="Source CSV File Connection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="4105"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="E:\KoreAssignment_Harry_Zhou\Data source\User_Source_File.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="UserID"
              DTS:DTSID="{4D917C9B-1259-4422-8FD9-B215BA797B87}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FullName"
              DTS:DTSID="{75FC10F9-A4F7-48FF-AEA6-41FD77440DDB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Age"
              DTS:DTSID="{C32D3220-00CE-421E-8BE9-16039E676CE9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{47341A2C-FDCA-45C3-BA95-B0A83CE77629}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RegistrationDate"
              DTS:DTSID="{91F78197-E8AE-4B0F-9B92-009F8822F2A7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastLoginDate"
              DTS:DTSID="{B99BD640-FE68-4391-90B1-C26B1F9A1D40}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchaseTotal"
              DTS:DTSID="{2F7EDC93-036F-4BBE-972C-478CA0E407C9}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Clean and Import to Prod Table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{A6810B0A-F4A5-479A-81AD-8A467BE7F0A5}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Clean and Import to Prod Table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Clean and Import to Prod Table\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[FullName (1)]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName (1)"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[Age (1)]"
                      cachedDataType="i4"
                      cachedName="Age (1)"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[Email (1)]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email (1)"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[RegistrationDate (1)]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate (1)"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[LastLoginDate (1)]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate (1)"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input].Columns[PurchaseTotal (1)]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal (1)"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal (1)]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[MakeInsertData]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="MakeInsertData"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(UserID)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[MakeUpdateData]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="MakeUpdateData"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName]} != #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName (1)]} || #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age]} != #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age (1)]} || #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email]} != #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email (1)]} || #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate]} != #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate (1)]} || #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate]} != #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate (1)]} || #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal]} != #{Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal (1)]}</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">FullName != [FullName (1)] || Age != [Age (1)] || Email != [Email (1)] || RegistrationDate != [RegistrationDate (1)] || LastLoginDate != [LastLoginDate (1)] || PurchaseTotal != [PurchaseTotal (1)]</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Filter Clean Data"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Filter Clean Data"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[DirtyData]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="DirtyData"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]} == -1 || #{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]} == 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">UserID == -1 || Age == 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[CleanData]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="CleanData"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]} != -1 &amp;&amp; #{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]} != 0</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">UserID != -1 &amp;&amp; Age != 0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Making Insert"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Making Insert"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[prod].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Clean and Import to Prod Table\Making Insert.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[RecordLastUpdated]"
                      cachedDataType="dbTimeStamp"
                      cachedName="RecordLastUpdated"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[RecordLastUpdated]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RecordLastUpdated]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[UserID (1)]"
                      cachedDataType="i4"
                      cachedName="UserID (1)"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[FullName (1)]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName (1)"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[Age (1)]"
                      cachedDataType="i4"
                      cachedName="Age (1)"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[Email (1)]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email (1)"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[RegistrationDate (1)]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate (1)"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[LastLoginDate (1)]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate (1)"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate (1)]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].Columns[PurchaseTotal (1)]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal (1)"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal (1)]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input].ExternalColumns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      name="RecordLastUpdated" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Making Insert.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Making Insert.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Insert.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Making Insert.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Making Update"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Making Update"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">Update [prod].[Users]

Set [FullName] = ?,
    [Age] = ?,
    [Email] = ?,
    [RegistrationDate] = ?,
    [LastLoginDate] = ?,
    [PurchaseTotal] = ?
Where [UserID] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Clean and Import to Prod Table\Making Update.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="255"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="i4"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="wstr"
                      length="255"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_3]"
                      dataType="dbDate"
                      name="Param_3">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_4]"
                      dataType="dbDate"
                      name="Param_4">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_5]"
                      dataType="r8"
                      name="Param_5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input].ExternalColumns[Param_6]"
                      dataType="i4"
                      name="Param_6">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Making Update.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Making Update.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Making Update.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Making Update.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Making Update.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[RecordLastUpdated]"
                      cachedDataType="dbTimeStamp"
                      cachedName="RecordLastUpdated"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[RecordLastUpdated]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID]"
                      name="UserID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName]"
                      name="FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age]"
                      name="Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email]"
                      name="Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate]"
                      name="RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate]"
                      name="LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RecordLastUpdated]"
                      name="RecordLastUpdated">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input].Columns[RecordLastUpdated]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID (1)]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[UserID (1)]"
                      name="UserID (1)"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName (1)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[FullName (1)]"
                      name="FullName (1)">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age (1)]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Age (1)]"
                      name="Age (1)">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email (1)]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[Email (1)]"
                      name="Email (1)">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate (1)]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[RegistrationDate (1)]"
                      name="RegistrationDate (1)">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate (1)]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[LastLoginDate (1)]"
                      name="LastLoginDate (1)">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal (1)]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output].Columns[PurchaseTotal (1)]"
                      name="PurchaseTotal (1)">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Prod Data Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Prod Data Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[prod].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[ID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[ID]"
                      name="ID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[RecordLastUpdated]"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RecordLastUpdated]"
                      name="RecordLastUpdated"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[ID]"
                      dataType="i4"
                      name="ID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].ExternalColumns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      name="RecordLastUpdated" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[ID]"
                      name="ID" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[RecordLastUpdated]"
                      name="RecordLastUpdated" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Remove Duplicated Records"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[StgID]"
                      cachedDataType="i4"
                      cachedName="StgID"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[StgID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">5</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">6</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">7</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">8</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[StgID]"
                      name="StgID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[StgID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]"
                      name="UserID"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[FullName]"
                      name="FullName"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]"
                      name="Age"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Email]"
                      name="Email"
                      sortKeyPosition="5">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      sortKeyPosition="6">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      sortKeyPosition="7">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      sortKeyPosition="8">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Save Dirty Data"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Save Dirty Data"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users_DirtyData]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      cachedSortKeyPosition="5"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      cachedSortKeyPosition="6"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      cachedSortKeyPosition="7"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[LastLoginDate]" />
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      cachedSortKeyPosition="8"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[PurchaseTotal]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Sort Clean Data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort Clean Data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[StgID]"
                      cachedDataType="i4"
                      cachedName="StgID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[StgID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      cachedSortKeyPosition="2"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      cachedSortKeyPosition="3"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      cachedSortKeyPosition="4"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      cachedSortKeyPosition="5"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      cachedSortKeyPosition="6"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      cachedSortKeyPosition="7"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      cachedSortKeyPosition="8"
                      lineageId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[StgID]"
                      name="StgID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[StgID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[UserID]"
                      name="UserID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[FullName]"
                      name="FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[Age]"
                      name="Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[Email]"
                      name="Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[RegistrationDate]"
                      name="RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[LastLoginDate]"
                      name="LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Sort Prod Data"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort Prod Data"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[ID]"
                      cachedDataType="i4"
                      cachedName="ID"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[ID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[UserID]"
                      cachedDataType="i4"
                      cachedName="UserID"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[UserID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[FullName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FullName"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[FullName]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[Age]"
                      cachedDataType="i4"
                      cachedName="Age"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[Email]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Email"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Email]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[RegistrationDate]"
                      cachedDataType="dbDate"
                      cachedName="RegistrationDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[LastLoginDate]"
                      cachedDataType="dbDate"
                      cachedName="LastLoginDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[PurchaseTotal]"
                      cachedDataType="r8"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input].Columns[RecordLastUpdated]"
                      cachedDataType="dbTimeStamp"
                      cachedName="RecordLastUpdated"
                      lineageId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RecordLastUpdated]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[ID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[ID]"
                      name="ID">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[ID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[UserID]"
                      name="UserID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[UserID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[FullName]"
                      name="FullName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[FullName]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[Age]"
                      name="Age">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[Email]"
                      name="Email">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[Email]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[RegistrationDate]"
                      name="RegistrationDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RegistrationDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[LastLoginDate]"
                      name="LastLoginDate">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[LastLoginDate]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[PurchaseTotal]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[RecordLastUpdated]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output].Columns[RecordLastUpdated]"
                      name="RecordLastUpdated">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output].Columns[RecordLastUpdated]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Clean and Import to Prod Table\Staging Table"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="Staging Table"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Clean and Import to Prod Table\Staging Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[StgID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[StgID]"
                      name="StgID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[StgID]"
                      name="StgID" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[UserID]"
                      name="UserID" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[FullName]"
                      name="FullName" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[Age]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[Age]"
                      name="Age" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[Email]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[Email]"
                      name="Email" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[RegistrationDate]"
                      name="RegistrationDate" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      dataType="dbDate"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      dataType="r8"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[CleanData]"
              endId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Inputs[Sort Input]"
              name="CleanData"
              startId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[CleanData]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[DirtyData]"
              endId="Package\Data Clean and Import to Prod Table\Save Dirty Data.Inputs[OLE DB Destination Input]"
              name="DirtyData"
              startId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Outputs[DirtyData]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[MakeInsertData]"
              endId="Package\Data Clean and Import to Prod Table\Making Insert.Inputs[OLE DB Destination Input]"
              name="MakeInsertData"
              startId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[MakeInsertData]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[MakeUpdateData]"
              endId="Package\Data Clean and Import to Prod Table\Making Update.Inputs[OLE DB Command Input]"
              name="MakeUpdateData"
              startId="Package\Data Clean and Import to Prod Table\Conditional Split.Outputs[MakeUpdateData]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[Merge Join Output]"
              endId="Package\Data Clean and Import to Prod Table\Conditional Split.Inputs[Conditional Split Input]"
              name="Merge Join Output"
              startId="Package\Data Clean and Import to Prod Table\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[OLE DB Source Output]"
              endId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Data Clean and Import to Prod Table\Staging Table.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[OLE DB Source Output1]"
              endId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Data Clean and Import to Prod Table\Prod Data Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[Sort Output]"
              endId="Package\Data Clean and Import to Prod Table\Filter Clean Data.Inputs[Conditional Split Input]"
              name="Sort Output"
              startId="Package\Data Clean and Import to Prod Table\Remove Duplicated Records.Outputs[Sort Output]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[Sort Output1]"
              endId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Data Clean and Import to Prod Table\Sort Clean Data.Outputs[Sort Output]" />
            <path
              refId="Package\Data Clean and Import to Prod Table.Paths[Sort Output2]"
              endId="Package\Data Clean and Import to Prod Table\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Data Clean and Import to Prod Table\Sort Prod Data.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Loading CSV file to Staging table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0581524C-C020-4C66-9293-62AA9E5A7550}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loading CSV file to Staging table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:EventHandlers>
        <DTS:EventHandler
          DTS:refId="Package\Loading CSV file to Staging table.EventHandlers[OnError]"
          DTS:CreationName="OnError"
          DTS:DTSID="{35E55CB3-293A-4042-A0D4-893BC9DC109D}"
          DTS:EventID="0"
          DTS:EventName="OnError"
          DTS:LocaleID="-1">
          <DTS:Variables>
            <DTS:Variable
              DTS:CreationName=""
              DTS:Description="The propagate property of the event"
              DTS:DTSID="{7E33C98A-5806-456E-9FA1-40B19836116F}"
              DTS:IncludeInDebugDump="6789"
              DTS:Namespace="System"
              DTS:ObjectName="Propagate">
              <DTS:VariableValue
                DTS:DataType="11">-1</DTS:VariableValue>
            </DTS:Variable>
          </DTS:Variables>
          <DTS:Executables />
        </DTS:EventHandler>
      </DTS:EventHandlers>
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Loading CSV file to Staging table\Convert null value script"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Convert null value script"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
     }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */

        

    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        if (string.IsNullOrEmpty(Row.Age) || Row.Age.Trim().ToLower() == "null")
        {
            Row.AgeValue = 0; // Replace null or "null" with 0 for Age
        }
        else
        {
            Row.AgeValue = int.Parse(Row.Age); // Parse the Age value
        }

        if (string.IsNullOrEmpty(Row.UserID) || Row.UserID.Trim().ToLower() == "null")
        {
            Row.UserIDValue = -1; // Replace null or "null" with -1 for UserID
        }
        else
        {
            Row.UserIDValue = int.Parse(Row.UserID); // Parse the UserID value
        }

        if (string.IsNullOrEmpty(Row.PurchaseTotal) || Row.PurchaseTotal.Trim().ToLower() == "null")
        {
            Row.PurchaseTotalValue = 0.00m; // Replace null or "null" with 0.00 for PurchaseTotal
        }
        else
        {
            decimal purchaseTotalValue;
            if (decimal.TryParse(Row.PurchaseTotal, out purchaseTotalValue))
            {
                Row.PurchaseTotalValue = Math.Round(purchaseTotalValue, 2); // Parse the PurchaseTotal value with 2 decimal places
            }
            else
            {
                // Handle invalid PurchaseTotal value here
                // For example, log an error or set a default value
                Row.PurchaseTotalValue = 0.00m;
            }
        }

        if (string.IsNullOrEmpty(Row.LastLoginDate) || Row.LastLoginDate_IsNull)
        {
            Row.LastLoginDateValue = new DateTime(1900, 1, 1); // Set default value to "1900-01-01"
        }
        else
        {
            Row.LastLoginDateValue = DateTime.Parse(Row.LastLoginDate); // Use the value from the LastLoginDate column
        }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FullName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FullName_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Age
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Age_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Email
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Email_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String RegistrationDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool RegistrationDate_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String LastLoginDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool LastLoginDate_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String PurchaseTotal
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool PurchaseTotal_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String UserID
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool UserID_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Int32 AgeValue
    {
        set
        {
            this[7] = value;
        }
    }
    public bool AgeValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal PurchaseTotalValue
    {
        set
        {
            this[8] = value;
        }
    }
    public bool PurchaseTotalValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 UserIDValue
    {
        set
        {
            this[9] = value;
        }
    }
    public bool UserIDValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime LastLoginDateValue
    {
        set
        {
            this[10] = value;
        }
    }
    public bool LastLoginDateValue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_df6669146b1f4d14ae82f9f26670dbc3.Properties.Settings.get_Default():SC_df6669146b1f4d14ae82f9f26670dbc3.Properties.Sett" +
    "ings")]

namespace SC_df6669146b1f4d14ae82f9f26670dbc3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_df6669146b1f4d14ae82f9f26670dbc3.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3f44f7ce-d4c6-450b-b277-8de48b5b4859}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_df6669146b1f4d14ae82f9f26670dbc3</RootNamespace>
    <AssemblyName>SC_df6669146b1f4d14ae82f9f26670dbc3</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_df6669146b1f4d14ae82f9f26670dbc3" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_df6669146b1f4d14ae82f9f26670dbc3</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_df6669146b1f4d14ae82f9f26670dbc3</msb:DisplayName>
    <msb:ProjectId>{2325CB7F-BECD-4BBB-8230-60B0D7C76206}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_df6669146b1f4d14ae82f9f26670dbc3.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_df6669146b1f4d14ae82f9f26670dbc3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_df6669146b1f4d14ae82f9f26670dbc3")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_df6669146b1f4d14ae82f9f26670dbc3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_df6669146b1f4d14ae82f9f26670dbc3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_df6669146b1f4d14ae82f9f26670dbc3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_df6669146b1f4d14ae82f9f26670dbc3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_df6669146b1f4d14ae82f9f26670dbc3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_df6669146b1f4d14ae82f9f26670dbc3.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALWQB2YAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAUjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAA4AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAWBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA0
OAAAAAAAAEgAAAACAAUA/CMAAEwTAAABAAAAAAAAAEg3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAYAKQEAAAEAABEDbwgAAAYo
EgAACi0cA28IAAAGbxMAAApvFAAACnIBAABwKBUAAAosCQMWbxQAAAYrEQMDbwgAAAYoFgAACm8U
AAAGA28SAAAGKBIAAAotHANvEgAABm8TAAAKbxQAAApyAQAAcCgVAAAKLAkDFW8YAAAGKxEDA28S
AAAGKBYAAApvGAAABgNvEAAABigSAAAKLRwDbxAAAAZvEwAACm8UAAAKcgEAAHAoFQAACiwSAxYW
FhYYcxcAAApvFgAABisuA28QAAAGEgAoGAAACiwPAwYYKBkAAApvFgAABisQAxYWFhYYcxcAAApv
FgAABgNvDgAABigSAAAKLQgDbw8AAAYsEwMgbAcAABcXcxoAAApvGgAABioDA28OAAAGKBsAAApv
GgAABioeAigeAAAGKioCAwQFKBwAAAoqUgJ7HQAACgJ7HgAAChaUbx8AAAoqIgIWKCAAAAoqUgJ7
HQAACgJ7HgAACheUbx8AAAoqIgIXKCAAAAoqUgJ7HQAACgJ7HgAAChiUbx8AAAoqIgIYKCAAAAoq
UgJ7HQAACgJ7HgAAChmUbx8AAAoqIgIZKCAAAAoqUgJ7HQAACgJ7HgAAChqUbx8AAAoqIgIaKCAA
AAoqUgJ7HQAACgJ7HgAAChuUbx8AAAoqIgIbKCAAAAoqUgJ7HQAACgJ7HgAAChyUbx8AAAoqIgIc
KCAAAAoqOgIdA4wdAAABKCEAAAoqWgMsCAIdKCIAAAoqcgsAAHBzIwAACno6Ah4DjA4AAAEoIQAA
CipaAywIAh4oIgAACipyCwAAcHMjAAAKej4CHwkDjB0AAAEoIQAACipeAywJAh8JKCIAAAoqcgsA
AHBzIwAACno+Ah8KA4wSAAABKCEAAAoqXgMsCQIfCigiAAAKKnILAABwcyMAAAp6HgIoJAAACioe
AiglAAAKKn4CKCYAAAoCAnMiAAAGfQEAAAQCAnMjAAAGfQIAAAQqkgRyqAAAcBpvJwAACiwVAgUC
AygoAAAKDgRzBQAABm8gAAAGKkorBwIDbyEAAAYDbxwAAAYt8SoGKjoCKCkAAAoCA30DAAAEKjoC
KCkAAAoCA30EAAAEKh4CKCkAAAoqrn4FAAAELR5yuAAAcNAHAAACKCoAAApvKwAACnMsAAAKgAUA
AAR+BQAABCoafgYAAAQqHgKABgAABCoafgcAAAQqHgIoLQAACioucykAAAaABwAABCpCU0pCAQAB
AAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAC4BwAAI34AACQIAADwBwAAI1N0cmluZ3MAAAAA
FBAAACwBAAAjVVMAQBEAABAAAAAjR1VJRAAAAFARAAD8AQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJ
AQAAAPoBMwAWAAABAAAAIwAAAAgAAAAHAAAAKgAAABUAAAAtAAAAEAAAAAEAAAADAAAAGQAAABoA
AAABAAAABAAAAAEAAAAAAMYDAQAAAAAABgBJAg0GBgDdAg0GBgCVAfoFDwCBBgAABgDCAUcFBgAs
AkcFBgANAkcFBgDEAkcFBgBpAkcFBgCCAkcFBgDZAUcFBgD0AWMDCgCdArIABgCMA/oECgDEBbIA
DgC1BbIACgCQBbIABgCpAPoECgBHB7IABgAKB/oEBgB4AfoFBgDVBS0GBgCEBTIFEgBIAaYDEgCp
AaYDEgAAAR0FBgBdAQ0GBgCAA/oEBgABAPoEBgCHA/oEBgBZBfoEBgBzBfoEBgDTAPoEBgBuAPoE
BgDMB0cFAAAAACsAAAAAAAEAAQABABAAEgUAABAAAQABAAEAEACoBQAAPQABAAUAAQAQACkHAABN
AAEAHgABABAA/gYAAFEAAwAiAAEAEAC/BgAAUQAEACMAAAAQADQGkAZRAAUAJAAAARAA7gaQBmkA
BwAoAAYA/ga3AAYAvwa7AAEANwe/AAEANwe/ABEABgXDABEA8ADHABEAVgDLAFAgAAAAAMYA+wIG
AAEAWCAAAAAAxgAGAwYAAQBgIAAAAADGAKkHzwABAJUhAAAAAIYY7QUGAAIAnSEAAAAAhhjtBVoA
AgCoIQAAAACGCJIAJQAFAL0hAAAAAIYIDwR8AAUAxiEAAAAAhghmACUABQDbIQAAAACGCAAEfAAF
AOQhAAAAAIYIvAMlAAUA+SEAAAAAhgjYBHwABQACIgAAAACGCDMBJQAFABciAAAAAIYIPAR8AAUA
ICIAAAAAhgghASUABQA1IgAAAACGCCMEfAAFAD4iAAAAAIYIlAMlAAUAUyIAAAAAhgi/BHwABQBc
IgAAAACGCDQAJQAFAHEiAAAAAIYI7gN8AAUAeiIAAAAAhggiAwEABQCJIgAAAACGCG8E1QAGAKAi
AAAAAIYIRgPaAAcAryIAAAAAhgihBNUACADGIgAAAACGCBIDAQAJANYiAAAAAIYIWATVAAoA7iIA
AAAAhggvA+AACwD+IgAAAACGCIME1QAMABYjAAAAAIYAwAd8AA0AHiMAAAAAhgARB3wADQAmIwAA
AACGGO0FBgANAEYjAAAAAMYAnAfmAA0AayMAAAAAxgGVB88AEQB+IwAAAADGAakHzwASAIAjAAAA
AIYY7QXwABMAjyMAAAAAhhjtBfAAFACeIwAAAACDGO0FBgAVAKYjAAAAAJMI0QX2ABUA0iMAAAAA
kwjYAPsAFQDZIwAAAACTCOQAAAEVAOEjAAAAAJYIHQcGARYA6CMAAAAAhhjtBQYAFgDwIwAAAACR
GPMFCwEWAAAAAQDEBwAAAQDKBQAAAgDJBgAAAwCeBQAAAQBdAwAAAQBdAwAAAQBdAwAAAQBdAwAA
AQBdAwAAAQBdAwAAAQBdAwAAAQBdAwAAAQA/AAAAAgCfAAAAAwDKBQAABACeBQAAAQDKBQAAAQDE
BwAAAQBNBwAAAQBNBwAAAQBdAwkA7QUBABEA7QUGABkA7QUKACkA7QUQADEA7QUQADkA7QUQAEEA
7QUQAEkA7QUQAFEA7QUQAFkA7QUQAGEA7QUQAGkA7QUGAKkA7QUGAMkA7QUVANkA7QUGAJkA+wIG
AJkABgMGAOEA4QcgAOEAAQUlAOEA5QUlAOEA1QcpAOkAGwEvAHEA7QU0AHEAGAE9APEAUABFAJEA
7QVNAJEAGwFUAHkA7QVaAHkAygVkAHkAyQZoAIEAfQNsAHkA4gRxAHkA8QR2AHkA6QQBAPkA7QUQ
AHkAwAd8AHkAEQd8AJkA7QUGAOEA9waAAJkA3QaIAKEA7QUGAAkBgACOAAkByAeXALEA7QWdANEA
7QUGAC4ACwA0AS4AEwA9AS4AGwBcAS4AIwBlAS4AKwCOAS4AMwCOAS4AOwCOAS4AQwBlAS4ASwCU
AS4AUwCOAS4AWwCrAUMAYwD1AeEAewD1AeMAawD1AekCcwBcAQkDcwBcARsAAwABAAcAFwAIABkA
AACWAA8BAAATBBMBAABqAA8BAAAEBBMBAADAAw8BAADcBBMBAAA3AQ8BAABABBMBAAAlAQ8BAAAn
BBMBAACYAw8BAADDBBMBAAA4AA8BAADyAxMBAAAmAxcBAABzBBMBAABKAxsBAAClBBMBAAAWAxcB
AABcBBMBAAAzAyABAACHBBMBAADVBSUBAAD4ACoBAAAhBy8BAgAGAAMAAgAHAAUAAgAIAAcAAgAJ
AAkAAgAKAAsAAgALAA0AAgAMAA8AAgANABEAAgAOABMAAgAPABUAAgAQABcAAgARABkAAgASABsA
AgATAB0AAQAUAB8AAQAVACEAAQAWACMAAQAXACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAgAl
AC8AAgAmADEAAQAnADEAAgAoADMABIAAAAEAAAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAAAKUA
RwAAAAAADwAAAAAAAAAAAAAArgBXBwAAAAAPAAAAAAAAAAAAAACuAHQHAAAAAAQAAAAAAAAAAAAA
AKUA+gQAAAAAAAAAAAEAAAA+BgAAAAAAAABJbnQzMgBTQ19kZjY2NjkxNDZiMWY0ZDE0YWU4MmY5
ZjI2NjcwZGJjMwA8TW9kdWxlPgBnZXRfVXNlcklEAElucHV0SUQAbXNjb3JsaWIAUm91bmQAZGVm
YXVsdEluc3RhbmNlAGdldF9BZ2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUA
Z2V0X0Z1bGxOYW1lAElucHV0TmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5Q
aXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBUcnlQYXJzZQBnZXRfTGFzdExvZ2luRGF0ZQBnZXRfUmVnaXN0
cmF0aW9uRGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0
ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlv
bkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhh
dGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0
QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRl
AFBvc3RFeGVjdXRlAHNldF9Vc2VySURWYWx1ZQBzZXRfQWdlVmFsdWUAc2V0X0xhc3RMb2dpbkRh
dGVWYWx1ZQBzZXRfUHVyY2hhc2VUb3RhbFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAR2V0U3RyaW5nAE1hdGgARGVjaW1hbABnZXRfUHVyY2hhc2VUb3RhbABTeXN0ZW0uQ29t
cG9uZW50TW9kZWwAZ2V0X0VtYWlsAFNDX2RmNjY2OTE0NmIxZjRkMTRhZTgyZjlmMjY2NzBkYmMz
LmRsbABnZXRfVXNlcklEX0lzTnVsbABnZXRfQWdlX0lzTnVsbABnZXRfRnVsbE5hbWVfSXNOdWxs
AGdldF9MYXN0TG9naW5EYXRlX0lzTnVsbABnZXRfUmVnaXN0cmF0aW9uRGF0ZV9Jc051bGwAc2V0
X1VzZXJJRFZhbHVlX0lzTnVsbABzZXRfQWdlVmFsdWVfSXNOdWxsAHNldF9MYXN0TG9naW5EYXRl
VmFsdWVfSXNOdWxsAHNldF9QdXJjaGFzZVRvdGFsVmFsdWVfSXNOdWxsAGdldF9QdXJjaGFzZVRv
dGFsX0lzTnVsbABnZXRfRW1haWxfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAFRyaW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmlu
Z0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAFRvTG93
ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxl
clNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfZGY2NjY5MTQ2YjFmNGQxNGFlODJmOWYyNjY3
MGRiYzMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Rm
NjY2OTE0NmIxZjRkMTRhZTgyZjlmMjY2NzBkYmMzLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZl
ckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlv
bnMAT2JqZWN0AEVuZE9mUm93c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29t
cG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1By
b2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBJc051bGxPckVt
cHR5AAAACW4AdQBsAGwAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBu
AG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEA
IAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAu
AAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGQAZgA2ADYANgA5ADEANAA2AGIAMQBmADQAZAAxADQA
YQBlADgAMgBmADkAZgAyADYANgA3ADAAZABiAGMAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBS
AGUAcwBvAHUAcgBjAGUAcwAAAADMEYOhCYyARYPFdKT/ZnQmAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFhBAcBETkEAAECDgMgAA4FAAICDg4EAAEIDgggBQEICAgCBQcAAgIOEBE5BwACETkROQgG
IAMBCAgIBQABEUkOCSADARJBHQgSRQMGEkEDBh0IBCABDggEIAECCAUgAgEIHAMgAAIHIAICDhGA
gQUgAR0ICAgAARKAhRGAiQUgABKAjQcgAgEOEoCNCLd6XFYZNOCJCImEXc2AgMyRAwYSFAMGEhgD
BhJNAwYSWQMGEl0DBhIgBSABARIMBCABAQIFIAEBETkFIAEBEUkJIAQBCA4SQRJFBSABARJNBAAA
ElkEAAASXQUAAQESXQQAABIgAwAAAQMoAA4DKAACAygACAQoABE5BCgAEUkECAASWQQIABJdBAgA
EiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
X2RmNjY2OTE0NmIxZjRkMTRhZTgyZjlmMjY2NzBkYmMzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAg
IDIwMjQAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxh
eU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAoOAAAAAAAAAAAAABC
OAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDgAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwBkAGYANgA2ADYAOQAxADQANgBiADEAZgA0AGQAMQA0AGEAZQA4ADIAZgA5AGYAMgA2ADYA
NwAwAGQAYgBjADMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGQAZgA2ADYANgA5ADEA
NAA2AGIAMQBmADQAZAAxADQAYQBlADgAMgBmADkAZgAyADYANgA3ADAAZABiAGMAMwAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMgA0AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZABmADYA
NgA2ADkAMQA0ADYAYgAxAGYANABkADEANABhAGUAOAAyAGYAOQBmADIANgA2ADcAMABkAGIAYwAz
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGQAZgA2ADYA
NgA5ADEANAA2AGIAMQBmADQAZAAxADQAYQBlADgAMgBmADkAZgAyADYANgA3ADAAZABiAGMAMwAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAVDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_df6669146b1f4d14ae82f9f26670dbc3</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">75</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[Age]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Age"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Age]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[LastLoginDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="LastLoginDate"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[PurchaseTotal]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="PurchaseTotal"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0].Columns[UserID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="UserID"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[UserID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[AgeValue]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[AgeValue]"
                      name="AgeValue" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[PurchaseTotalValue]"
                      dataType="decimal"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[PurchaseTotalValue]"
                      name="PurchaseTotalValue"
                      scale="2" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[UserIDValue]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[UserIDValue]"
                      name="UserIDValue" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[LastLoginDateValue]"
                      dataType="date"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[LastLoginDateValue]"
                      name="LastLoginDateValue" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Loading CSV file to Staging table\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[FullName]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="FullName"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[FullName]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[Email]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Email"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Email]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[RegistrationDate]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegistrationDate"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[AgeValue]"
                      cachedDataType="i4"
                      cachedName="AgeValue"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[AgeValue]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[UserIDValue]"
                      cachedDataType="i4"
                      cachedName="UserIDValue"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[UserIDValue]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[PurchaseTotalValue]"
                      cachedDataType="decimal"
                      cachedName="PurchaseTotalValue"
                      cachedScale="2"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[PurchaseTotalValue]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input].Columns[LastLoginDateValue]"
                      cachedDataType="date"
                      cachedName="LastLoginDateValue"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[LastLoginDateValue]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]"
                      name="Copy of FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[FullName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email]"
                      name="Copy of Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Email]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate]"
                      name="Copy of RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDateValue]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of LastLoginDateValue]"
                      name="Copy of LastLoginDateValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[LastLoginDateValue]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AgeValue]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of AgeValue]"
                      name="Copy of AgeValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[AgeValue]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserIDValue]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of UserIDValue]"
                      name="Copy of UserIDValue"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[UserIDValue]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotalValue]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of PurchaseTotalValue]"
                      name="Copy of PurchaseTotalValue"
                      scale="2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[PurchaseTotalValue]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Loading CSV file to Staging table\Staging table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Staging table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[stg].[Users]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">true</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Loading CSV file to Staging table\Staging table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[LocalHost.KoreAssignment_Harry_Zhou.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[PurchaseTotalValue]"
                      cachedDataType="decimal"
                      cachedName="PurchaseTotalValue"
                      cachedScale="2"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[PurchaseTotalValue]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[AgeValue]"
                      cachedDataType="i4"
                      cachedName="AgeValue"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[AgeValue]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[Copy of FullName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of FullName"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of FullName]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[Copy of Email]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Copy of Email"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Email]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[Copy of RegistrationDate]"
                      cachedDataType="date"
                      cachedName="Copy of RegistrationDate"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      lineageId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of RegistrationDate]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[UserIDValue]"
                      cachedDataType="i4"
                      cachedName="UserIDValue"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[UserIDValue]" />
                    <inputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].Columns[LastLoginDateValue]"
                      cachedDataType="date"
                      cachedName="LastLoginDateValue"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      lineageId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0].Columns[LastLoginDateValue]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[StgID]"
                      dataType="i4"
                      name="StgID" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[UserID]"
                      dataType="i4"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[FullName]"
                      dataType="wstr"
                      length="255"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Age]"
                      dataType="i4"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                      dataType="wstr"
                      length="255"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[RegistrationDate]"
                      dataType="dbDate"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[LastLoginDate]"
                      dataType="dbDate"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input].ExternalColumns[PurchaseTotal]"
                      dataType="r8"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Loading CSV file to Staging table\Staging table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\Staging table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Loading CSV file to Staging table\User_CSV file"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="4105"
              name="User_CSV file"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Loading CSV file to Staging table\User_CSV file.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Source CSV File Connection]"
                  connectionManagerRefId="Package.ConnectionManagers[Source CSV File Connection]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[FullName]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[FullName]"
                      name="FullName"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Age]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Age]"
                      name="Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Email]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[Email]"
                      name="Email"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[RegistrationDate]"
                      name="RegistrationDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[LastLoginDate]"
                      name="LastLoginDate"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[PurchaseTotal]"
                      name="PurchaseTotal"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[UserID]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      length="50"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].Columns[UserID]"
                      name="UserID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[UserID]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="UserID" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[FullName]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="FullName" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[Age]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Age" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[Email]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Email" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[RegistrationDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="RegistrationDate" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[LastLoginDate]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="LastLoginDate" />
                    <externalMetadataColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output].ExternalColumns[PurchaseTotal]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PurchaseTotal" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Loading CSV file to Staging table.Paths[Data Conversion Output]"
              endId="Package\Loading CSV file to Staging table\Staging table.Inputs[OLE DB Destination Input]"
              name="Data Conversion Output"
              startId="Package\Loading CSV file to Staging table\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Loading CSV file to Staging table.Paths[Flat File Source Output]"
              endId="Package\Loading CSV file to Staging table\Convert null value script.Inputs[Input 0]"
              name="Flat File Source Output"
              startId="Package\Loading CSV file to Staging table\User_CSV file.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Loading CSV file to Staging table.Paths[Output 0]"
              endId="Package\Loading CSV file to Staging table\Data Conversion.Inputs[Data Conversion Input]"
              name="Output 0"
              startId="Package\Loading CSV file to Staging table\Convert null value script.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{F754BA8B-358F-4EF7-845C-2D512C7F34CA}"
      DTS:From="Package\Loading CSV file to Staging table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Data Clean and Import to Prod Table" />
  </DTS:PrecedenceConstraints>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{F7D38180-D99F-4E79-9964-714241C70657}"
      DTS:EventID="8508976"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{F98C25BF-7397-4D41-B83E-0C054382293F}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="289,42"
          Id="Package\Data Clean and Import to Prod Table"
          TopLeft="188.333325849639,184.785704845069" />
        <NodeLayout
          Size="277,42"
          Id="Package\Loading CSV file to Staging table"
          TopLeft="194.166658951177,55.71428286786" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="332.749992400408,97.71428286786">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,87.071421977209"
              Start="0,0"
              End="0,79.571421977209">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,79.571421977209" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Clean and Import to Prod Table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="229,42"
          Id="Package\Data Clean and Import to Prod Table\Remove Duplicated Records"
          TopLeft="273,67" />
        <NodeLayout
          Size="169,42"
          Id="Package\Data Clean and Import to Prod Table\Save Dirty Data"
          TopLeft="797,68" />
        <NodeLayout
          Size="181,42"
          Id="Package\Data Clean and Import to Prod Table\Filter Clean Data"
          TopLeft="567,67.142860558568" />
        <NodeLayout
          Size="175,42"
          Id="Package\Data Clean and Import to Prod Table\Prod Data Source"
          TopLeft="423,143" />
        <NodeLayout
          Size="139,42"
          Id="Package\Data Clean and Import to Prod Table\Merge Join"
          TopLeft="610,333" />
        <NodeLayout
          Size="157,42"
          Id="Package\Data Clean and Import to Prod Table\Making Update"
          TopLeft="99,399" />
        <NodeLayout
          Size="163,42"
          Id="Package\Data Clean and Import to Prod Table\Sort Prod Data"
          TopLeft="432,217" />
        <NodeLayout
          Size="157,42"
          Id="Package\Data Clean and Import to Prod Table\Staging Table"
          TopLeft="57,66" />
        <NodeLayout
          Size="169,42"
          Id="Package\Data Clean and Import to Prod Table\Sort Clean Data"
          TopLeft="739,215" />
        <NodeLayout
          Size="157,42"
          Id="Package\Data Clean and Import to Prod Table\Making Insert"
          TopLeft="99,327" />
        <NodeLayout
          Size="181,42"
          Id="Package\Data Clean and Import to Prod Table\Conditional Split"
          TopLeft="354,331" />
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[OLE DB Source Output1]"
          TopLeft="512,185">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[OLE DB Source Output]"
          TopLeft="214,87.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59,0"
              Start="0,0"
              End="51.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[Merge Join Output]"
          TopLeft="610,353">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-75,0"
              Start="0,0"
              End="-67.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-67.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[MakeUpdateData]"
          TopLeft="444.5,373">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-267,26"
              Start="0,0"
              End="-267,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9"
                    Point2="0,13"
                    Point3="-4,13" />
                  <mssgle:LineSegment
                    End="-263,13" />
                  <mssgle:CubicBezierSegment
                    Point1="-263,13"
                    Point2="-267,13"
                    Point3="-267,17" />
                  <mssgle:LineSegment
                    End="-267,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-171.463359375,18,75.92671875,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[MakeInsertData]"
          TopLeft="354,350">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-98,0"
              Start="0,0"
              End="-90.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-90.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-80.463359375,5,70.42671875,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[DirtyData]"
          TopLeft="748,88.571430279284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49,0"
              Start="0,0"
              End="41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-0.373359375000003,5,42.24671875,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[CleanData]"
          TopLeft="657.5,109.142860558568">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="166,105.857139441432"
              Start="0,0"
              End="166,98.357139441432">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.928569720716" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48.928569720716"
                    Point2="0,52.928569720716"
                    Point3="4,52.928569720716" />
                  <mssgle:LineSegment
                    End="162,52.928569720716" />
                  <mssgle:CubicBezierSegment
                    Point1="162,52.928569720716"
                    Point2="166,52.928569720716"
                    Point3="166,56.928569720716" />
                  <mssgle:LineSegment
                    End="166,98.357139441432" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="59.96912109375,57.928569720716,46.0617578125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[Sort Output2]"
          TopLeft="513.5,259">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="144.166666666667,74"
              Start="0,0"
              End="144.166666666667,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.8947368421053"
                    Point2="0,43.8947368421053"
                    Point3="4,43.8947368421053" />
                  <mssgle:LineSegment
                    End="140.166666666667,43.8947368421053" />
                  <mssgle:CubicBezierSegment
                    Point1="140.166666666667,43.8947368421053"
                    Point2="144.166666666667,43.8947368421053"
                    Point3="144.166666666667,47.8947368421053" />
                  <mssgle:LineSegment
                    End="144.166666666667,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[Sort Output1]"
          TopLeft="823.5,257">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-122.166666666667,76"
              Start="0,0"
              End="-122.166666666667,68.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0810810810811" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.0810810810811"
                    Point2="0,45.0810810810811"
                    Point3="-4,45.0810810810811" />
                  <mssgle:LineSegment
                    End="-118.166666666667,45.0810810810811" />
                  <mssgle:CubicBezierSegment
                    Point1="-118.166666666667,45.0810810810811"
                    Point2="-122.166666666667,45.0810810810811"
                    Point3="-122.166666666667,49.0810810810811" />
                  <mssgle:LineSegment
                    End="-122.166666666667,68.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Clean and Import to Prod Table.Paths[Sort Output]"
          TopLeft="502,88.071430279284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65,0"
              Start="0,0"
              End="57.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Data Clean and Import to Prod Table\Save Dirty Data">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Clean and Import to Prod Table\Prod Data Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Clean and Import to Prod Table\Staging Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Data Clean and Import to Prod Table\Making Insert">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loading CSV file to Staging table">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="169,42"
          Id="Package\Loading CSV file to Staging table\Data Conversion"
          TopLeft="513.3333129353,73.357139109349" />
        <NodeLayout
          Size="157,42"
          Id="Package\Loading CSV file to Staging table\Staging table"
          TopLeft="716.666638188893,73.499997675419" />
        <NodeLayout
          Size="240,42"
          Id="Package\Loading CSV file to Staging table\Convert null value script"
          TopLeft="214.999991456668,71.4999963470869" />
        <NodeLayout
          Size="157,42"
          Id="Package\Loading CSV file to Staging table\User_CSV file"
          TopLeft="4.99999980131781,68.714282203694" />
        <EdgeLayout
          Id="Package\Loading CSV file to Staging table.Paths[Output 0]"
          TopLeft="454.999991456668,93.428567728218">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.3333214786324,0"
              Start="0,0"
              End="50.8333214786324,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.8333214786324,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loading CSV file to Staging table.Paths[Flat File Source Output]"
          TopLeft="161.999999801318,91.1071392753905">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.99999165535,0"
              Start="0,0"
              End="45.49999165535,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.49999165535,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loading CSV file to Staging table.Paths[Data Conversion Output]"
          TopLeft="682.3333129353,94.428568392384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.3333252535925,0"
              Start="0,0"
              End="26.8333252535925,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.8333252535925,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loading CSV file to Staging table\Staging table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>